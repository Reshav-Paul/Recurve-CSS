@use 'sass:map';
@import '../constants';

$breakpoint-xs: map.get($breakpoints, 'xs');
$breakpoint-sm: map.get($breakpoints, 'sm');
$breakpoint-md: map.get($breakpoints, 'md');
$breakpoint-lg: map.get($breakpoints, 'lg');

// containers

$container-types: ('', '-sm', '-md', '-lg', '-xl', '-fluid');
@function containers($from:1, $to:6) {
    @if $from == $to {
        @return '.container#{nth($container-types, $from)}';
    } @else {
        $selector: '.container#{nth($container-types, $from)}';
        @for $index from ($from+1) through $to {
            $selector: '#{$selector}, .container#{nth($container-types, $index)}';
        }
        @return $selector;
    }
}

/* default container styles */
#{containers(1, 6)} {
    --rcss-gutter-x: 1.5rem;
    width: 100%;
    padding-right: calc(var(--rcss-gutter-x) / 2);
    padding-left: calc(var(--rcss-gutter-x) / 2);
    margin-right: auto;
    margin-left: auto;
}

/* default sizing at xl screens */
#{containers(1, 5)} {
    width: 100%;
    max-width: 1140px;
}

/* sizing at lg screens */
@media (max-width: $breakpoint-lg) {
    .container-xl {
        max-width: 100%;
    }
    #{containers(1, 4)} {
        max-width: 960px;
    }
}

/* sizing at md screens */
@media (max-width: $breakpoint-md) {
    .container-lg {
        max-width: 100%;
    }
    #{containers(1, 3)} {
        max-width: 720px;
    }
}

/* sizing at sm screens */
@media (max-width: $breakpoint-sm) {
    .container-md {
        max-width: 100%;
    }
    #{containers(1, 2)} {
        max-width: 540px;
    }
}

/* sizing at xs screens */
@media (max-width: $breakpoint-xs) {
    .container-xl {
        max-width: 100%;
    }
    #{containers(1, 1)} {
        max-width: 100%;
    }
}